x-service-bff-base: &bff-base
  build:
    args:
      GID: ${GID:-0}
      UID: ${UID:-0}
      HEALTHCHECK_URL: http://localhost:4000/rest/status
    context: Dockerfile.d/bff.development
  depends_on:
    - mysql
    - redis
  environment:
    ALLOW_ORIGIN: http://${PUBLIC_IP_ADDR_OR_FQDN:-127.0.0.1}:3000
  init: true
  user: ${UID:-0}:${GID:-0}
  volumes:
    - .:/workspace
  working_dir: /workspace/bff

x-service-frontend-base: &frontend-base
  build:
    args:
      GID: ${GID:-0}
      UID: ${UID:-0}
      HEALTHCHECK_URL: http://localhost:3000/api/status
    context: Dockerfile.d/frontend.development
  environment:
    BFF_ENDPOINT_GRAPHQL_HTTP: http://${PUBLIC_IP_ADDR_OR_FQDN:-127.0.0.1}:4000/graphql
    BFF_ENDPOINT_GRAPHQL_WEBSOCKET: ws://${PUBLIC_IP_ADDR_OR_FQDN:-127.0.0.1}:4000/graphql
  init: true
  user: ${UID:-0}:${GID:-0}
  volumes:
    - .:/workspace
  working_dir: /workspace/frontend

services:
  bff:
    <<: *bff-base
    command:
      - zsh
      - --login
      - -c
      - |
        npm-check-updates --upgrade
        npm install
        npm audit fix
        sort-package-json
        /workspace/scripts/wait-mysql.zsh mysql
        npm run dev
    ports:
      - ${BIND_IP_ADDR:-127.0.0.1}:4000:4000
  bff-test-watch:
    <<: *bff-base
    command:
      - zsh
      - --login
      - -c
      - |
        npm run test:watch
    depends_on:
      - bff
    profiles:
      - watch
  frontend:
    <<: *frontend-base
    command:
      - zsh
      - --login
      - -c
      - |
        npm-check-updates --upgrade
        npm install
        npm audit fix
        sort-package-json
        npm run dev
    ports:
      # Next.js
      - ${BIND_IP_ADDR:-127.0.0.1}:3000:3000
      # StoryBook
      - ${BIND_IP_ADDR:-127.0.0.1}:6006:6006
  frontend-test-watch:
    <<: *frontend-base
    command:
      - zsh
      - --login
      - -c
      - |
        npm run test:watch
    depends_on:
      - frontend
    profiles:
      - watch
  mysql:
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
    # https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Concepts.VersionMgmt.html
    # https://learn.microsoft.com/en-us/azure/mysql/concepts-version-policy#supported-mysql-versions
    # https://cloud.google.com/sql/docs/mysql/db-versions
    image: mysql:8
    init: true
    ports:
      - ${BIND_IP_ADDR:-127.0.0.1}:3306:3306
    volumes:
      # https://hub.docker.com/_/mysql
      # > Initializing a fresh instance
      # > When a container is started for the first time, a new database with the specified name will be created and initialized with the provided configuration variables.
      # > Furthermore, it will execute files with extensions .sh, .sql and .sql.gz that are found in /docker-entrypoint-initdb.d.
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
      - mysql-data:/var/lib/mysql
  redis:
    # https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/supported-engine-versions.html
    # https://learn.microsoft.com/en-us/azure/azure-cache-for-redis/cache-overview#redis-versions
    # https://cloud.google.com/memorystore/docs/redis/supported-versions#current_versions
    image: redis:6
    init: true
    ports:
      - ${BIND_IP_ADDR:-127.0.0.1}:6379:6379

  # for Prettier Code Formatter
  # ["INFO" - 00:00:00 AM] Attempted to determine module path from /path/to/the/project
  # ["ERROR" - 00:00:00 AM] Failed to load module. If you have prettier or plugins referenced in package.json, ensure you have run `npm install`
  # ["ERROR" - 00:00:00 AM] Cannot find module 'prettier' from '/path/to/the/project'
  workspace:
    build:
      args:
        GID: ${GID:-0}
        UID: ${UID:-0}
      context: Dockerfile.d/workspace
    command:
      - zsh
      - --login
      - -c
      - |
        npm-check-updates --upgrade
        npm install
        npm audit fix
        sort-package-json
        sleep infinity
    init: true
    user: ${UID:-0}:${GID:-0}
    volumes:
      - .:/workspace
    working_dir: /workspace

version: '3.9'
volumes:
  mysql-data:
    driver: local
